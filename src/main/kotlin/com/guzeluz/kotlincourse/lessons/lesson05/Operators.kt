package com.guzeluz.kotlincourse.lessons.lesson05

fun main() {

//    Арифметические Операторы
    val sum = 10 + 5 // 15
    val diff = 10 - 5 // 5
    val product = 10 * 5 // 50
    val quotient = 10 / 5 // 2
    val remainder = 10 % 5 // 0
    val remainder1 = 10 % 6 // 4
    val remainder2 = 10 % 4 // 2

//    Операторы Сравнения
    val isEqual = (5 == 5) // true
    val isNotEqual = (5 != 5) // false
    val isGreater = (5.0 > 3) // true
    val isLesser = (5 < 3) // false
    val isGreaterOrEqual = (5 >= 5) // true
    val isLesserOrEqual = (5 <= 3) // false

//    Логические Операторы
    val andResult = (5 > 3) && (5 > 4) // true
    val orResult = (5 > 3) || (5 < 4) // true
    val notResult = !(5 > 3) // false

//    Операторы Присваивания
//    Простое присваивание ( = )
//    Сложение и присваивание ( += ) и другие ( -= ; *= ; /=)
    var number = 5
    number += 3 // number теперь равно 8, равнозначное выражение: number = number + 3

//    Операторы Инкремента и Декремента
    var a = 5
    var b = a++
    println("a: $a")
    println("b: $b")

    var c = 5
    var d = ++c
    println("c: $c")
    println("d: $d")

//    Приоритеты арифметических и логических операций в Kotlin
    /*
    Арифметические операции
В Kotlin арифметические операции следуют традиционным математическим правилам приоритета:

Скобки  ( )  имеют самый высокий приоритет и используются для явного указания порядка выполнения операций.

Умножение ( * ) и деление ( / ) идут следующими. Они выполняются до сложения и вычитания.

Сложение ( + ) и вычитание ( - ) имеют самый низкий приоритет среди арифметических операций.

Логические операции:
Логические операции в Kotlin также следуют определенному порядку приоритета:

Логическое НЕ ( ! ) имеет самый высокий приоритет. Оно инвертирует значение своего операнда.

Логическое И ( && ) выполняется после логического НЕ. Оператор && возвращает true, только если оба операнда истинны.

Логическое ИЛИ ( || ) имеет самый низкий приоритет. Оператор || возвращает true, если хотя бы один из операндов истинен.

Пример:

Выражение 3 + 4 * 5 равно 23, а не 35, потому что умножение имеет более высокий приоритет и выполняется первым, так что это 3 + (4 * 5).

Выражение !(true && false) || false равно true. Сначала вычисляется true && false, что равно false, затем !false, что равно true, и в конце true || false, что также равно true.
     */

    //Оператор Элвиса (?:)

    val name: String? = null
    val result = name ?: "Unknown" // "Unknown", так как name равно null
    println(result)

    val userVolume: Int? = null
    val defaultValue = 30
    println(userVolume ?: defaultValue)

}