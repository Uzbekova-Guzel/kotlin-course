package com.guzeluz.kotlincourse.lessons.lesson09.homework

fun main() {
//    Работа с массивами Array.
//    Создайте массив из 5 целых чисел и инициализируйте его значениями от 1 до 5.
    val a1 = arrayOf(1, 2, 3, 4, 5)

//    Создайте пустой массив строк размером 10 элементов.
    val a2 = Array(10) { 0 }

//    Создайте массив из 5 элементов типа Double и заполните его значениями,
//    являющимися удвоенным индексом элемента.
    val a3 = Array(5) { 0.0 }

    for (i in a3.indices) {
        a3[i] = i * 2.0
    }

//    Создайте массив из 5 элементов типа Int. Используйте цикл,
//    чтобы присвоить каждому элементу значение, равное его индексу, умноженному на 3.
    val a4 = Array(5) { 0 }

    for (i in a4.indices) {
        a4[i] = i * 3
    }

//    Создайте массив из 3 nullable строк.
//    Инициализируйте его одним null значением и двумя строками.
    val a5 = arrayOf<String?>(null, "Hello", "World")

//    Создайте массив целых чисел и скопируйте его в новый массив в цикле.
    val a6 = arrayOf(1, 2, 3, 4, 5)
    val a7 = Array(a6.size) { 0 }

    for (i in a6.indices) {
        a7[i] = a6[i]
    }

//    Создайте два массива целых чисел одинаковой длины.
//    Создайте третий массив, вычев значения одного из другого.
    val a8 = arrayOf(40, 5, 23, -45, 9)
    val a9 = arrayOf(56, 3, 45, 8, 5)
    val a10 = Array(a8.size) { 0 }

    for (i in a10.indices) {
        a10[i] = a8[i] - a9[i]
    }

//    Создайте массив целых чисел. Найдите индекс элемента со значением 5.
//    Если значения 5 нет в массиве, возвращаем -1. Реши задачу через цикл while.
    val a11 = arrayOf(4, 8, 2, 3, 7, 6, 0)
    var i = 0
    var foundIndex = -1

    while (i < a11.size) {
        if (a11[i] == 5) {
            foundIndex = i
            break
        }
        i++
    }
    println(foundIndex)

//    Создайте массив целых чисел.
//    Используйте цикл для перебора массива и вывода каждого элемента в консоль.
//    Напротив каждого элемента должно быть написано “чётное” или “нечётное”.
    val a12 = arrayOf(4, 8, 2, 3, 7, 6, 0)

    for (i in a12) {
        if (i % 2 == 0) println("$i чётное") else println("$i нечётное")
    }

//    Создай функцию, которая принимает массив строк и строку для поиска.
//    Функция должна находить в массиве элемент, в котором принятая строка является подстрокой
//    (метод contains()). Верни найденный элемент из функции в виде строки.
    findElementInArray(arrayOf("one apple", "two people", "three tree", "four seasons", "five stars"), "four")

//    Работа со списками List.
//    Создайте пустой неизменяемый список целых чисел.
    val a15 = listOf(4, 5, 2, 9)

//    Создайте неизменяемый список строк,
//    содержащий три элемента (например, "Hello", "World", "Kotlin").
    val a16 = listOf("Hello", "World", "Kotlin")

//    Создайте изменяемый список целых чисел и инициализируйте его значениями от 1 до 5.
    val a17 = mutableListOf(1, 2, 3, 4, 5)

//    Имея изменяемый список целых чисел,
//    добавьте в него новые элементы (например, 6, 7, 8).
    val a18 = mutableListOf(1, 2, 3, 4, 5)
    a18.add(6)
    a18.add(7)
    a18.add(8)
//    or
    val a19 = listOf(6, 7, 8)
    a18.addAll(a19)

//    Имея изменяемый список строк,
//    удалите из него определенный элемент (например, "World").
    val a20 = mutableListOf("Hello", "World", "Kotlin")
    a20.remove("World")
//    Создайте список целых чисел и используйте цикл
//    для вывода каждого элемента на экран.
    val a21 = listOf(4, 5, 2, 9)

    for (i in a21) println(i)

//    Создайте список строк и получите из него второй элемент,
//    используя его индекс.
    val a22 = listOf("Hello", "World", "Kotlin")
    println(a22[1])

//    Имея изменяемый список чисел,
//    измените значение элемента на определенной позиции
//    (например, замените элемент на позиции 2 на новое значение).
    val a23 = mutableListOf(1, 2, 3, 4, 5)
    a23[1] = 0

//    Создайте два списка строк и объедините их в один новый список,
//    содержащий элементы обоих списков. Реши задачу с помощью циклов.
    val a24 = listOf("one", "two", "three", "four")
    val a25 = listOf("two", "five", "four")
    val a26 = mutableListOf<String>()

    for (i in a24) {
        for (j in a25) {
            if (i == j) a26.add(i)
        }
    }
    println(a26.joinToString(" "))

//    Создайте список целых чисел и найдите в нем минимальный и
//    максимальный элементы используя цикл.
    val a27 = listOf(54, 234, -46, 7, 4, 0, 3243, -6)
    var min = 0
    var max = 0

    for (i in a27) {
        if (i < min) min = i
        else if (i > max) max = i
    }
    println("MIN: $min, MAX: $max")

//    Имея список целых чисел, создайте новый список,
//    содержащий только четные числа из исходного списка используя цикл.
    val a28 = listOf(54, 234, -46, 7, 4, 0, 3243, -6)
    val a29 = mutableListOf<Int>()

    for (i in a28) {
        if (i % 2 == 0) a29.add(i)
    }
    println(a29.joinToString(" "))

//    Работа с Множествами Set.
//    Создайте пустое неизменяемое множество целых чисел.
    val a30 = emptySet<Int>()

//    Создайте неизменяемое множество целых чисел,
//    содержащее три различных элемента (например, 1, 2, 3).
    val a31 = setOf(1, 2, 3)

//    Создайте изменяемое множество строк и
//    инициализируйте его несколькими значениями
//    (например, "Kotlin", "Java", "Scala").
    val a32 = mutableSetOf("Kotlin", "Java", "Scala")

//    Имея изменяемое множество строк, добавьте в него новые элементы
//    (например, "Swift", "Go").
    a32.add("Swift")
    a32.add("Go")

//    or
    val a33 = mutableSetOf("Swift", "Go")
    a32.addAll(a33)

//    Имея изменяемое множество целых чисел,
//    удалите из него определенный элемент (например, 2).
    val a34 = mutableSetOf(1, 2, 3, 4, 5)
    a34.remove(2)

//    Создайте множество целых чисел и используйте цикл
//    для вывода каждого элемента на экран.
    val a35 = setOf(-1, 34, 975, 345, -56)

    for (i in a35) {
        println(i)
    }
//    Создай функцию, которая принимает множество строк (set) и строку
//    и проверяет, есть ли в множестве указанная строка.
//    Нужно вернуть булево значение true если строка есть.
//    Реши задачу через цикл.
    findElementInSet(setOf("one table", "two chairs", "three people"), "two chairs")


//    Создайте два множества строк и объедините их в одно новое множество,
//    содержащее все уникальные элементы обоих множеств.
//    Реши задачу с помощью циклов.
    val a38 = setOf("one", "two", "three", "four")
    val a39 = setOf("two", "five", "four")
    val a40 = mutableSetOf<String>()

    for (i in a38) {
        for (j in a39) {
            if (i == j) a40.add(i)
        }
    }
    println(a40.joinToString(" "))

//    Создайте два множества целых чисел и найдите их пересечение
//    (общие элементы). Реши задачу через вложенные циклы.
    val a41 = setOf(14, 2, -33, 45, 34)
    val a42 = setOf(-22, 45, 88, 2)
    val a43 = mutableSetOf<Int>()

    for (i in a41) {
        for (j in a42) {
            if (i == j) a43.add(i)
        }
    }
    println(a43.joinToString(" "))

//    Создайте два множества строк и найдите разность
//    первого множества относительно второго
//    (элементы, присутствующие в первом множестве,
//    но отсутствующие во втором).
//    Реши задачу через вложенные циклы и переменные флаги.
    val a44 = setOf("one", "two", "three", "four")
    val a45 = setOf("two", "five", "four")
    val a46 = mutableSetOf<String>()

    for (i in a44) {
        var found = false
        for (j in a45) {
            if (i == j) {
                found = true
                break
            }
        }
        if (!found) a46.add(i)
    }
    println(a46.joinToString(" "))


//    Создайте множество строк и
//    конвертируйте его в список с использованием цикла.
    val a47 = setOf("one table", "two chairs", "three people")
    val a48 = mutableListOf<String>()

    for (i in a47) a48.add(i)
    println(a48.joinToString(" "))
}

fun findElementInArray(a13: Array<String>, a14: String) {

    for (i in a13) {
        if (i.contains(a14)) println(i)
    }
}

fun findElementInSet(a36: Set<String>, a37: String) {
    var result = false

    for (i in a36) {
        if (i == a37) result = true
    }
    println(result)
}
